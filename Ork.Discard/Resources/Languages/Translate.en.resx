<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Abort" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddCustomer" xml:space="preserve">
    <value>Add Customer...</value>
  </data>
  <data name="AddInspectionAttribute" xml:space="preserve">
    <value>Add Inspection Attribute...</value>
  </data>
  <data name="AddProductionItem" xml:space="preserve">
    <value>Add Production Item...</value>
  </data>
  <data name="AllCustomers" xml:space="preserve">
    <value>All Customers</value>
  </data>
  <data name="AllInspections" xml:space="preserve">
    <value>All Inspections</value>
  </data>
  <data name="Balance" xml:space="preserve">
    <value>Balance</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChangeIndex" xml:space="preserve">
    <value>Change Index</value>
  </data>
  <data name="ChooseProductionItem" xml:space="preserve">
    <value>Production Item</value>
  </data>
  <data name="Controller" xml:space="preserve">
    <value>Controller</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="CustomerDeleteFailed" xml:space="preserve">
    <value>Deleting Customer failed. There are dependencies to other objects.</value>
  </data>
  <data name="DBError" xml:space="preserve">
    <value>Database Operation failed</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="EditCustomer" xml:space="preserve">
    <value>Edit Customer...</value>
  </data>
  <data name="EditInspectionAttributes" xml:space="preserve">
    <value>Edit Inspectionattributes...</value>
  </data>
  <data name="Evaluation" xml:space="preserve">
    <value>Evaluation</value>
  </data>
  <data name="External" xml:space="preserve">
    <value>External Complaint</value>
  </data>
  <data name="FilterResponsibleSubjects" xml:space="preserve">
    <value>Filter Controllers...</value>
  </data>
  <data name="Finished" xml:space="preserve">
    <value>Finished</value>
  </data>
  <data name="FinishedItem" xml:space="preserve">
    <value>Finished Item</value>
  </data>
  <data name="HalfFinishedItem" xml:space="preserve">
    <value>Half Finished Item</value>
  </data>
  <data name="Inspection" xml:space="preserve">
    <value>Inspection</value>
  </data>
  <data name="InspectionAttribute" xml:space="preserve">
    <value>Inspection Attribute</value>
  </data>
  <data name="InspectionDate" xml:space="preserve">
    <value>Date of Inspection</value>
  </data>
  <data name="InspectionDeleteFailed" xml:space="preserve">
    <value>Deleting Inspection failed. There are dependencies to other objects.</value>
  </data>
  <data name="InspectionName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="InspectionShift" xml:space="preserve">
    <value>Inspectionshift</value>
  </data>
  <data name="InspectionType" xml:space="preserve">
    <value>Inspectiontype</value>
  </data>
  <data name="Intern" xml:space="preserve">
    <value>Internal BA</value>
  </data>
  <data name="ItemCategory" xml:space="preserve">
    <value>Item Category</value>
  </data>
  <data name="ItemDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ItemName" xml:space="preserve">
    <value>Item Name</value>
  </data>
  <data name="ItemNumber" xml:space="preserve">
    <value>Item Number</value>
  </data>
  <data name="Material" xml:space="preserve">
    <value>Material</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NotAvailable" xml:space="preserve">
    <value>Not Available</value>
  </data>
  <data name="NotFinished" xml:space="preserve">
    <value>Not Finished</value>
  </data>
  <data name="NotSet" xml:space="preserve">
    <value>Not set</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="ProductionDate" xml:space="preserve">
    <value>Productiondate</value>
  </data>
  <data name="ProductionItemDeleteFailed" xml:space="preserve">
    <value>Deleting Production Item failed. There are dependencies to other objects.</value>
  </data>
  <data name="ProductionShift" xml:space="preserve">
    <value>Productionshift</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>Rate</value>
  </data>
  <data name="RateSingle" xml:space="preserve">
    <value>Rate Inspection: </value>
  </data>
  <data name="RatioSingle" xml:space="preserve">
    <value>Ratio Inspection Attributes Inspection: </value>
  </data>
  <data name="RatioTotal" xml:space="preserve">
    <value>Total Ratio Inspection Attributes</value>
  </data>
  <data name="ReferenceNumber1" xml:space="preserve">
    <value>Reference Number 1</value>
  </data>
  <data name="ReferenceNumber2" xml:space="preserve">
    <value>Reference Number 2</value>
  </data>
  <data name="Return" xml:space="preserve">
    <value>Return Delivery</value>
  </data>
  <data name="Sample" xml:space="preserve">
    <value>Sample</value>
  </data>
  <data name="SampleSize" xml:space="preserve">
    <value>Sample Size</value>
  </data>
  <data name="SearchTextProductionItems" xml:space="preserve">
    <value>Search Productionitems...</value>
  </data>
  <data name="SetPicture" xml:space="preserve">
    <value>Set Picture</value>
  </data>
  <data name="Shift1" xml:space="preserve">
    <value>Shift 1</value>
  </data>
  <data name="Shift2" xml:space="preserve">
    <value>Shift 2</value>
  </data>
  <data name="Shift3" xml:space="preserve">
    <value>Shift 3</value>
  </data>
  <data name="Shift4" xml:space="preserve">
    <value>Shift 4</value>
  </data>
  <data name="SingleInspection" xml:space="preserve">
    <value>Single Inspection</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Sure" xml:space="preserve">
    <value>Sure?</value>
  </data>
  <data name="TitleAddInspection" xml:space="preserve">
    <value>Add Inspection...</value>
  </data>
  <data name="TitleEditInspection" xml:space="preserve">
    <value>Edit Inspection...</value>
  </data>
  <data name="TitleProductionItemAddViewModel" xml:space="preserve">
    <value>Add Production Item...</value>
  </data>
  <data name="TitleProductionItemEditViewModel" xml:space="preserve">
    <value>Edit Production Item...</value>
  </data>
  <data name="TitleProductionItemManagementViewModel" xml:space="preserve">
    <value>Production Items</value>
  </data>
  <data name="ToolNumber" xml:space="preserve">
    <value>Tool Number</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total quantity</value>
  </data>
  <data name="TotalAmount" xml:space="preserve">
    <value>Total Amount</value>
  </data>
  <data name="TotalDiscardItems" xml:space="preserve">
    <value>Discard Items</value>
  </data>
  <data name="Unit" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value: </value>
  </data>
</root>